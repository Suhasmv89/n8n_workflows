{
  "active": false,
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "n8n": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Back Up to Git Hub": {
      "main": [
        [
          {
            "node": "Set Git Hub Parameters",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Set Git Hub Parameters": {
      "main": [
        [
          {
            "node": "Get Current Back Ups",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If back up file is too large": {
      "main": [
        [],
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Compare Versions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [],
        [
          {
            "node": "GitHub2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "GitHub1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compare Versions": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Current Back Ups": {
      "main": [
        [
          {
            "node": "If back up file is too large",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-25T07:59:07.313Z",
  "id": "uVM0lBTs4t2niFUh",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "n8n_gitHub_backups",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 11
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -520,
        40
      ],
      "id": "20a716aa-f303-42d9-a92c-e9d1b5ddabbe",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "returnAll": false,
        "filters": {},
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 1,
      "position": [
        -300,
        40
      ],
      "id": "d68c0725-bf2c-441e-9e4b-eb641844f3df",
      "name": "n8n",
      "credentials": {
        "n8nApi": {
          "id": "PSRkERfSylZzRZti",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -80,
        40
      ],
      "id": "35617ef6-3ded-479d-b1a8-1c560ef6d5a6",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "uVM0lBTs4t2niFUh",
          "mode": "list",
          "cachedResultName": "n8n_gitHub_backups"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        140,
        40
      ],
      "id": "4b4f4f1f-2755-4ac9-83f6-a491ac0b51e1",
      "name": "Execute Workflow"
    },
    {
      "parameters": {
        "content": "## Get Workflows",
        "height": 320,
        "width": 980
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -630,
        -60
      ],
      "id": "f76df2bf-8391-47ac-97c4-299e2808513d",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Sub Workflow - Check for existing back ups",
        "height": 300,
        "width": 980,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -660,
        340
      ],
      "id": "876f71ca-b516-4fbd-868b-6a6045820e10",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bad206fd-4f22-487c-a5ec-ec9940f6609a",
              "name": "repo.owner",
              "value": "Suhasmv89",
              "type": "string"
            },
            {
              "id": "306bc22d-70d1-43ad-9f6f-e8cb74cba976",
              "name": "repo.name",
              "value": "n8n_workflows",
              "type": "string"
            },
            {
              "id": "2197c3fe-218b-4705-9669-3a95e1daea07",
              "name": "repo.path",
              "value": "backup/",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -300,
        475
      ],
      "id": "7d0d3ec0-bd10-466a-967f-63e598479369",
      "name": "Set Git Hub Parameters"
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -520,
        400
      ],
      "id": "9d31ea7a-2dd7-42a6-9a3b-c09b5ece1b03",
      "name": "Back Up to Git Hub"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ec25f96f-3cf6-442b-98ba-15717984bbfb",
              "leftValue": "={{ $json.error }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            },
            {
              "id": "8e17acc9-d9d1-4fce-9c90-1363646da819",
              "leftValue": "={{ $json.content }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        140,
        475
      ],
      "id": "19b63961-57b4-4162-b2b6-7e5f6965323f",
      "name": "If back up file is too large"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        360,
        400
      ],
      "id": "94db1225-bf6e-4b11-a298-e1e20c587e0e",
      "name": "Merge"
    },
    {
      "parameters": {
        "content": "## Back up new or apply changes\n",
        "height": 400,
        "width": 880,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        330,
        260
      ],
      "id": "af2907f5-6ddf-45f4-971a-3fa3d206b816",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.github_status }}",
                    "rightValue": "same",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "b6c43aef-ad8f-402e-aaef-d1be77f22828"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "0"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f1293c4e-6054-4850-bf87-dac9ff838ca4",
                    "leftValue": "={{ $json.github_status }}",
                    "rightValue": "different",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "1"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "bc4c0063-f9a5-4061-ab87-491c53e82b7c",
                    "leftValue": "={{ $json.github_status }}",
                    "rightValue": "new",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "2"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        800,
        400
      ],
      "id": "c9ab4614-90b0-4de6-84c0-883cad1adc99",
      "name": "Switch"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "={{$('Set Git Hub Parameters').item.json.repo.owner}}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{$('Set Git Hub Parameters').item.json.repo.name}}",
          "mode": "name"
        },
        "filePath": "={{$('Set Git Hub Parameters').item.json.repo.path}}{{ $('Back Up to Git Hub').item.json.id }}.json",
        "fileContent": "={{ $('Compare Versions').item.json['n8n_data_stringy'] }}",
        "commitMessage": "={{ $('Back Up to Git Hub').first().json.name }}({{ $json.github_status }})"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        1020,
        500
      ],
      "id": "4bee4970-20d1-4b22-bf49-e86e90ef4d64",
      "name": "GitHub1",
      "webhookId": "825fb064-755c-4331-a9cf-d273f1f49a3d",
      "credentials": {
        "githubOAuth2Api": {
          "id": "p0Egmc5zHdqwpuvH",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Helper function to order JSON keys\nconst orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n};\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(\n    Buffer.from($input.all()[0].json.content, 'base64').toString()\n  );\n  const n8nWorkflow = $input.all()[1].json;\n\n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n\n  $input.all()[0].json.content_decoded = orderedOriginal;\n}\n// No file returned / new workflow\nelse if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n\n  $input.all()[0].json.content_decoded = orderedOriginal;\n}\n// Fresh workflow\nelse {\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return modified input\nreturn $input.all();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        580,
        400
      ],
      "id": "4e192166-6a99-4723-80a7-6089080fa336",
      "name": "Compare Versions"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "={{$('Set Git Hub Parameters').item.json.repo.owner}}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{$('Set Git Hub Parameters').item.json.repo.name}}",
          "mode": "name"
        },
        "filePath": "={{$('Set Git Hub Parameters').item.json.repo.path}}{{ $('Back Up to Git Hub').item.json.id }}.json",
        "fileContent": "={{ $('Compare Versions').item.json['n8n_data_stringy'] }}",
        "commitMessage": "={{ $('Back Up to Git Hub').first().json.name }}({{ $json.github_status }})"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        1020,
        300
      ],
      "id": "d39409c8-7b10-453d-8fbb-353b0b0231b9",
      "name": "GitHub2",
      "webhookId": "825fb064-755c-4331-a9cf-d273f1f49a3d",
      "credentials": {
        "githubOAuth2Api": {
          "id": "p0Egmc5zHdqwpuvH",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "={{$json.repo.owner}}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{$json.repo.name}}",
          "mode": "name"
        },
        "filePath": "={{ $json.repo.path }}{{ $('Back Up to Git Hub').item.json.id }}.json",
        "additionalParameters": {}
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        -80,
        475
      ],
      "id": "d0405cfa-d8ff-4a78-8c0b-12966e005a3c",
      "name": "Get Current Back Ups",
      "webhookId": "6033e9f2-46ee-4d63-9063-e24cb220ff27",
      "credentials": {
        "githubOAuth2Api": {
          "id": "p0Egmc5zHdqwpuvH",
          "name": "GitHub account"
        }
      },
      "onError": "continueRegularOutput"
    }
  ],
  "pinData": {
    "Back Up to Git Hub": [
      {
        "json": {
          "createdAt": "2025-07-07T23:10:57.822Z",
          "updatedAt": "2025-07-07T23:14:45.000Z",
          "id": "0Iy8Lvv8QHGlR7ty",
          "name": "My workflow 3",
          "active": false,
          "isArchived": false,
          "nodes": [
            {
              "parameters": {
                "channelId": "xxxxxxx",
                "message": "=Bonjour ! Voici les stats de notre Instagram {{$json[\"Compte\"]}} en ce beau matin du {{$node[\"Date & Time\"].json[\"day_today\"]}} {{$node[\"Date & Time\"].json[\"data\"]}}\nLe nombre de Followers est de : {{$json[\"Followers\"]}}\nNous avons réalisé : {{$json[\"Posts\"]}} posts, \nBravo !",
                "attachments": [],
                "otherOptions": {}
              },
              "name": "Mattermost",
              "type": "n8n-nodes-base.mattermost",
              "position": [
                720,
                0
              ],
              "typeVersion": 1,
              "id": "d4bf23cb-3cb5-49b4-ac87-4f722c11c5bb",
              "credentials": {
                "mattermostApi": {
                  "id": null,
                  "name": "API"
                }
              }
            },
            {
              "parameters": {
                "value": "={{$json[\"date_today\"]}}",
                "custom": true,
                "toFormat": "DD-MM-YYYY",
                "options": {}
              },
              "name": "Date & Time",
              "type": "n8n-nodes-base.dateTime",
              "position": [
                340,
                0
              ],
              "typeVersion": 1,
              "id": "99d2d72c-a13d-41ea-a12e-0d2a9e0267e8"
            },
            {
              "parameters": {
                "triggerTimes": {
                  "item": [
                    {
                      "hour": 8
                    }
                  ]
                }
              },
              "name": "Cron",
              "type": "n8n-nodes-base.cron",
              "position": [
                0,
                0
              ],
              "typeVersion": 1,
              "id": "e6068271-3d86-4cce-b8d2-d7a97029937f"
            },
            {
              "parameters": {
                "authentication": "oAuth2",
                "sheetId": "sheetID",
                "range": "cells",
                "options": {}
              },
              "name": "Read data on Google Sheets",
              "type": "n8n-nodes-base.googleSheets",
              "position": [
                540,
                0
              ],
              "typeVersion": 1,
              "id": "165dcb61-7571-423d-a7ff-f5b42188ec31",
              "credentials": {
                "googleSheetsOAuth2Api": {
                  "id": null,
                  "name": "GoogleAPI"
                }
              }
            },
            {
              "parameters": {
                "language": "python",
                "pythonCode": "from datetime import datetime\n\n# Define weekdays starting from Sunday (to match JS getDay())\nweekday = [\"Dimanche\", \"Lundi\", \"Mardi\", \"Mercredi\", \"Jeudi\", \"Vendredi\", \"Samedi\"]\n\n# Get today's date and day index\nnow = datetime.now()\niso_date = now.isoformat()\nday_index = (now.weekday() + 1) % 7  # Convert Monday=0 to Sunday=0 style\n\n# Modify first item in items list\nitems[0]['json']['date_today'] = iso_date\nitems[0]['json']['day_today'] = weekday[day_index]\n\n# Return updated items\nreturn items\n"
              },
              "type": "n8n-nodes-base.code",
              "typeVersion": 2,
              "position": [
                400,
                -300
              ],
              "id": "b1529d2b-04f8-4890-90de-3fd2f52688d5",
              "name": "Code"
            }
          ],
          "connections": {
            "Cron": {
              "main": [
                [
                  {
                    "node": "Code",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Date & Time": {
              "main": [
                [
                  {
                    "node": "Read data on Google Sheets",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Read data on Google Sheets": {
              "main": [
                [
                  {
                    "node": "Mattermost",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Code": {
              "main": [
                [
                  {
                    "node": "Date & Time",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            }
          },
          "settings": {
            "executionOrder": "v1"
          },
          "staticData": null,
          "meta": null,
          "pinData": {},
          "versionId": "f50f0937-2439-42d3-ae18-deb0384d0fb7",
          "triggerCount": 0,
          "tags": []
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-07-25T14:41:55.000Z",
  "versionId": "aeab9d4f-6316-4ffd-a0d9-94bda946406e"
}